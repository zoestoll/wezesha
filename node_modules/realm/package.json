{
  "_args": [
    [
      {
        "raw": "realm",
        "scope": null,
        "escapedName": "realm",
        "name": "realm",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/zoeystoll/Desktop/8-SEMESTER/CS132/wk/4_wezesha/wezesha"
    ]
  ],
  "_from": "realm@latest",
  "_id": "realm@1.2.0",
  "_inCache": true,
  "_location": "/realm",
  "_nodeVersion": "7.7.4",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/realm-1.2.0.tgz_1490720835402_0.8934188459534198"
  },
  "_npmUser": {
    "name": "realmnpm",
    "email": "help@realm.io"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "realm",
    "scope": null,
    "escapedName": "realm",
    "name": "realm",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/realm/-/realm-1.2.0.tgz",
  "_shasum": "1f4531e86cd7f7e5219d6024fd4c46ae50ad4c2d",
  "_shrinkwrap": null,
  "_spec": "realm",
  "_where": "/Users/zoeystoll/Desktop/8-SEMESTER/CS132/wk/4_wezesha/wezesha",
  "author": {
    "name": "Realm",
    "email": "help@realm.io",
    "url": "https://realm.io"
  },
  "binary": {
    "module_name": "realm",
    "module_path": "./compiled/{node_abi}_{platform}_{arch}/",
    "host": "https://static.realm.io",
    "remote_path": "/node-pre-gyp"
  },
  "bugs": {
    "url": "https://github.com/realm/realm-js/issues"
  },
  "dependencies": {
    "extract-zip": "^1.6.0",
    "ini": "^1.3.4",
    "nan": "^2.3.3",
    "node-fetch": "^1.6.3",
    "node-pre-gyp": "^0.6.30",
    "request": "^2.78.0",
    "sync-request": "^3.0.1",
    "url-parse": "^1.1.7"
  },
  "description": "Realm is a mobile database: an alternative to SQLite and key-value stores",
  "devDependencies": {
    "babel-eslint": "^6.0.4",
    "eslint": "^3.2.2",
    "eslint-plugin-jasmine": "^2.1.0",
    "eslint-plugin-react": "^6.7.0",
    "jsdoc": "^3.4.0",
    "license-checker": "^8.0.3",
    "mockery": "^2.0.0",
    "rimraf": "^2.6.1",
    "semver": "^5.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "1f4531e86cd7f7e5219d6024fd4c46ae50ad4c2d",
    "tarball": "https://registry.npmjs.org/realm/-/realm-1.2.0.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "android",
    "lib",
    "react-native",
    "scripts",
    "src",
    "tests",
    "vendor",
    "binding.gyp",
    "realm.gypi",
    "target_defaults.gypi",
    "dependencies.list"
  ],
  "gitHead": "92c10c469c5d92c4044d953e9167afa477dc687c",
  "homepage": "https://realm.io",
  "keywords": [
    "database",
    "db",
    "react",
    "react-native",
    "persistence",
    "localstorage",
    "sqlite",
    "asyncstorage",
    "rocksdb",
    "leveldb",
    "realm"
  ],
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "realmnpm",
      "email": "km@realm.io"
    }
  ],
  "name": "realm",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/realm/realm-js.git"
  },
  "rnpm": {
    "ios": {
      "project": "react-native/ios/RealmReact.xcodeproj",
      "sharedLibraries": [
        "libc++",
        "libz"
      ]
    }
  },
  "scripts": {
    "eslint": "npm install && npm run lint .",
    "get-core-version": "scripts/download-core.sh --version",
    "get-sync-version": "scripts/download-core.sh --versionSync",
    "get-version": "node -p process.env.npm_package_version",
    "install": "node-pre-gyp install --fallback-to-build",
    "isMac": "node -p \"if (process.platform == 'darwin') { process.exit(0); } else { process.exit(-1); }\"",
    "jsdoc": "npm install && npm run jsdoc:clean && jsdoc -c docs/conf.json",
    "jsdoc:clean": "rimraf ./docs/output",
    "license-check": "npm install && license-checker --exclude \"MIT,ISC,BSD,Apache-2.0,BSD-2-Clause,BSD-3-Clause,WTFPL,Unlicense,(MIT AND CC-BY-3.0)\" | node scripts/handle-license-check.js",
    "lint": "eslint",
    "node-nosync-tests": "npm install --build-from-source && cd tests && npm install && npm run test-nosync && cd ..",
    "node-tests": "npm install --build-from-source && cd tests && npm install && npm run test-nosync && cd ..",
    "prepublish": "node scripts/prepublish.js",
    "set-version": "scripts/set-version.sh",
    "test": "scripts/test.sh",
    "test-runner:ava": "cd tests/test-runners/ava && npm install && npm test",
    "test-runner:jest": "cd tests/test-runners/jest && npm install && npm test",
    "test-runner:mocha": "cd tests/test-runners/mocha && npm install && npm test",
    "test-runners": "npm run test-runner:ava && npm run test-runner:mocha && npm run test-runner:jest",
    "testMac": "npm run isMac -s && echo this is mac || echo . "
  },
  "version": "1.2.0"
}
